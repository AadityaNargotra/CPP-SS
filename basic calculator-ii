class Solution {
public:
    int calculate(string s) {
        stack<int> operand;
        stack<char> operato;
        for (int i = 0; i < s.size(); i++) {
            if (isdigit(s[i])) {
                int val = 0;
                while (i < s.size() && isdigit(s[i])) {
                    val = val * 10 + (s[i] - '0');
                    i++;
                }
                i--;
                operand.push(val);
            } else if (s[i] == '+' || s[i] == '-' || s[i] == '*' || s[i] == '/') {
                while (!operato.empty() && precedence(operato.top()) >= precedence(s[i])) {
                    int y = operand.top();
                    operand.pop();
                    int x = operand.top(); 
                    operand.pop();
                    char oper = operato.top(); 
                    operato.pop();
                    operand.push(mathamatics(x, y, oper));
                }
                operato.push(s[i]);
            }
        }
        while(!operato.empty()){
            int y = operand.top();
            operand.pop();
            int x = operand.top(); 
            operand.pop();
            char oper = operato.top(); 
            operato.pop();
            operand.push(mathamatics(x, y, oper));
        }
        return operand.top();
    }

    int precedence(char oper) {
        if (oper == '+' || oper == '-') 
            return 1;
        if (oper == '*' || oper == '/') 
            return 2;
        return 0;
    }

    int mathamatics(int x, int y, char oper) {
        switch (oper) {
            case '+': 
                return x + y;
            case '-': 
                return x - y;
            case '*': 
                return x * y;
            case '/': 
                return x / y;
        }
        return 0;
    }
};
